name: Docker Image CI

on:
  push:
    branches: ["main"]
    paths:
      - proj/**
  pull_request:
    branches: ["main"]
    paths:
      - proj/**

jobs:
  gitversion:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
        working-directory: "./"
    outputs:
      versionout: ${{ steps.gitversionstep.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
          preferLatestVersion: true

      - name: Determine Version
        id: gitversionstep
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs (step output)
        run: |
          echo "SemVer: ${{ steps.gitversionstep.outputs.semVer }}"

  servicea:
    runs-on: ubuntu-latest
    environment: dev
    needs: gitversion
    if: github.event_name != 'pull_request'
    defaults:
      run:
        working-directory: "./proj/Assignment"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
      - name: Log into registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build Docker image
        run: docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/servicea:${{ needs.gitversion.outputs.versionout }} -f Assignment.ServiceA/Dockerfile .
      - name: Push Docker image
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/servicea:${{ needs.gitversion.outputs.versionout }}

  serviceb:
    runs-on: ubuntu-latest
    environment: dev
    needs: gitversion
    if: github.event_name != 'pull_request'
    defaults:
      run:
        working-directory: "./proj/Assignment"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
      - name: Log into registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build Docker image
        run: docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/serviceb:${{ needs.gitversion.outputs.versionout }} -f Assignment.ServiceB/Dockerfile .
      - name: Push Docker image
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/serviceb:${{ needs.gitversion.outputs.versionout }}
